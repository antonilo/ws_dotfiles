" load plugins from vundle
set nocompatible
filetype off

call plug#begin()
" General
Plug 'Chiel92/vim-autoformat'
Plug 'Valloric/YouCompleteMe', { 'do': '/home/eggerk/dotfiles/vim/install_ycm.sh $(pwd)' }
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
Plug 'ntpeters/vim-better-whitespace'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-obsession'

" Theme
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

" Git
Plug 'airblade/vim-gitgutter'
Plug 'tpope/vim-fugitive'

" C++
Plug 'drmikehenry/vim-headerguard', { 'for': ['cpp', 'c'] }
Plug 'richq/vim-cmake-completion'
" Plug 'taketwo/vim-ros'

" Latex
Plug 'lervag/vimtex', { 'for': ['tex'] }

" CSV
Plug 'chrisbra/csv.vim', { 'for': ['csv'] }
call plug#end()

set autoread " Detect when a file is changed
set clipboard=unnamedplus

" Minimal number of of screen lines (context) above and below the cursor
set scrolloff=5

" Enable line numbers
set ruler
set number
set relativenumber
set showcmd

" No indentation after namespace.
set cino=N-s

" Use ctrl-hjkl to switch split
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>
inoremap <C-J> <Esc><C-W><C-J>
inoremap <C-K> <Esc><C-W><C-K>
inoremap <C-L> <Esc><C-W><C-L>
inoremap <C-H> <Esc><C-W><C-H>

" Open new splits bottom/right
set splitbelow
set splitright
set equalalways


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => User Interface
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Searching
set ignorecase " case insensitive searching
set smartcase " case-sensitive if expresson contains a capital letter
set hlsearch
set incsearch " set incremental search, like modern browsers

" switch syntax highlighting on
syntax on

set autoindent " automatically set indent of new line
set smartindent

" set tab == 2 spaces
set tabstop=2
set softtabstop=2
set expandtab
set shiftwidth=2
set smarttab

set laststatus=2 " show the satus line all the time
" Set the command window height to 2 lines, to avoid many cases of having to
" "press <Enter> to continue"
set cmdheight=2
set mouse=a

colorscheme desert
set cursorline
hi CursorLine cterm=none ctermbg=237
hi MatchParen cterm=none ctermbg=white ctermfg=black
set guifont=Ubuntu\ Mono\ derivative\ Powerline

set colorcolumn=81  " Line at 80 chars.
highlight ColorColumn ctermbg=magenta
highlight Search ctermfg=white
au BufNewFile,BufRead *.tex setlocal colorcolumn=
au VimEnter * :highlight Todo ctermfg=lightgray ctermbg=darkblue

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Plugin settings
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Format
noremap <C-F> V:Autoformat<cr>
imap <C-F> <c-o>V:Autoformat<cr>
let g:formatdef_clangformat='"clang-format -style=file -fallback-style=google"'
let g:autoformat_autoindent = 0
let g:autoformat_retab = 0
let g:autoformat_remove_trailing_spaces = 0
let g:formatters_python=['yapf']
let g:formatter_yapf_style='pep8'

let g:airline_powerline_fonts = 1

" GitGutter
set updatetime=500

let g:ycm_global_ycm_extra_conf = '/home/eggerk/dotfiles/vim/ycm/ycm_extra_conf.py'
let g:ycm_confirm_extra_conf = 0
let g:ycm_key_list_select_completion = ['<TAB>', '<Down>']
map <leader>g :YcmCompleter GoTo<cr>
map <leader>x :YcmCompleter GoToDefinition<cr>
map <leader>c :YcmCompleter GoToDeclaration<cr>
map <leader>t :YcmCompleter GetType<cr>
map <leader>i :YcmCompleter GoToInclude<cr>
map <leader>h :YcmCompleter GetDoc<cr>

" fzf
map <c-p> :FZF<cr>
map <c-g> :GFiles<cr>
map <c-b> :Buffers<cr>
map <c-s> :Ag<cr>

" Commentary
autocmd FileType c,cpp,cs,java setlocal commentstring=//\ %s
autocmd FileType cmake setlocal commentstring=#\ %s

" HeaderGuards
function! g:HeaderguardName()
  let project_name = expand('%:p:gs@.*include/\(.*\)/.*@\1@g')
  let project_name = substitute(project_name, '[^0-9a-zA-Z_]', '_', 'g')
  let project_name = toupper(project_name)
  let file_name = toupper(expand('%:t:gs/[^0-9a-zA-Z_]/_/g'))
  return project_name . "_" . file_name . "_"
endfunction

function! g:HeaderguardLine3()
  return "#endif  // " . g:HeaderguardName() . ""
endfunction

" Vim-ros
let g:ros_build_system="catkin-tools"
